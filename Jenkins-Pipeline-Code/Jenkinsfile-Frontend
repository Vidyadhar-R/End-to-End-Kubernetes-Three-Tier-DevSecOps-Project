pipeline {
    agent any 
    tools {
        nodejs 'nodejs'
    }
    environment  {
        SCANNER_HOME = tool 'sonar-scanner'
        AWS_ACCOUNT_ID = credentials('ACCOUNT_ID')
        AWS_ECR_REPO_NAME = credentials('ECR_REPO1')
        AWS_DEFAULT_REGION = 'ap-southeast-2'
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
    }
    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }
        
        stage('Checkout from Git') {
            steps {
                git url: 'https://github.com/Vidyadhar-R/End-to-End-Kubernetes-Three-Tier-DevSecOps-Project.git'
            }
        }
        
        stage('Trivy File Scan') {
            steps {
                dir('Application-Code/backend') {
                    sh 'trivy fs . > trivyfs.txt'
                }
            }
        }
        
        stage("Docker Image Build") {
            steps {
                script {
                    dir('Application-Code/backend') {
                        sh 'docker system prune -f'
                        sh 'docker container prune -f'
                        sh 'docker build -t ${REPOSITORY_URI}/backend:${BUILD_NUMBER} .'
                    }
                }
            }
        }
        
        stage("ECR Image Pushing") {
            steps {
                script {
                    sh 'aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${REPOSITORY_URI}'
                    sh 'docker push ${REPOSITORY_URI}/backend:${BUILD_NUMBER}'
                }
            }
        }
        
        stage('Checkout Code') {
            steps {
                git url: 'https://github.com/Vidyadhar-R/End-to-End-Kubernetes-Three-Tier-DevSecOps-Project.git'
            }
        }
        
        stage('Update Deployment file') {
            environment {
                GIT_REPO_NAME = "End-to-End-Kubernetes-Three-Tier-DevSecOps-Project"
                GIT_USER_NAME = "Vidyadhar-R"
            }
            steps {
                dir('Kubernetes-Manifests-file/Backend') {
                    withCredentials([usernamePassword(credentialsId: 'GITHUB-APP', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GITHUB_TOKEN')]) {
                        sh '''
                            git config user.email "rsaividyadhar009@gmail.com"
                            git config user.name "Vidyadhar-R"
                            BUILD_NUMBER=${BUILD_NUMBER}
                            
                            # Extract current image tag
                            imageTag=$(grep -oP '(?<=backend:)[^ ]+' deployment.yaml)
                            
                            # Update image tag in deployment.yaml
                            sed -i "s/backend:${imageTag}/${AWS_ECR_REPO_NAME}:${BUILD_NUMBER}/" deployment.yaml
                            
                            # Commit and push changes
                            git add deployment.yaml
                            git commit -m "Update deployment Image to version ${BUILD_NUMBER}"
                            git push https://${GIT_USERNAME}:${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
                        '''
                    }
                }
            }
        }
    }
}
